let inputs: int list = 83453::89672::81336::74923::71474::117060::55483::116329::123515::99383::80314::108221::128335::72860::139235::127843::140120::63561::68854::109062::146211::59096::123085::105763::127657::142212::111007::100166::63641::59010::108575::93619::144095::74561::95059::145318::81404::96567::91799::92987::107137::87678::126842::85594::116330::104714::128117::132641::75602::90747::69038::67322::146147::147535::83266::85908::124634::51681::104430::56202::68631::69970::116985::140878::125357::126229::66379::103213::108210::73855::130992::113363::82298::111468::110751::52272::103661::122262::114363::80881::65183::125291::100119::56995::101634::55467::136284::107433::95647::71462::133265::104554::62499::61347::68675::123501::113954::135798::80825::128235::[]

let fuel_req mass: int -> int = mass / 3 - 2 

let rec _fuel_req_2 mass fuel: int -> int -> int =
    let fuel': int = fuel_req (mass: int) in
    match (fuel' <= 0: bool) with
    | true -> fuel
    | false -> _fuel_req_2 (fuel': int) ((fuel + fuel'): int)

let fuel_req_2 mass: int -> int = _fuel_req_2 (mass: int) (0: int)

let rec fold init f l: int -> (int -> int -> int) -> int list -> int =
  match (l: int list) with
  | h :: t -> fold ((f (init: int) (h: int)): int) (f: int -> int -> int) (t: int list)
  | [] -> init

let solve a: unit -> int =
  let f: int -> int -> int = fun total mass: int -> int -> int ->>
    let fuel_req: int = fuel_req_2 (mass: int) in
    total + fuel_req
  in
  fold (0: int) (f: int -> int -> int) (inputs: int list)